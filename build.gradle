plugins {
    id("org.jetbrains.kotlin.jvm") version "$kotlinVersion"
    id("org.jetbrains.kotlin.plugin.allopen") version "$kotlinVersion"
    id("io.micronaut.minimal.application") version "4.4.0"
    id("io.micronaut.docker") version "4.4.0"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("com.google.devtools.ksp") version "$kotlinVersion-1.0.20"
    id("org.jlleitschuh.gradle.ktlint") version "12.1.1"
}

version = "0.1"
group = "info.mapes.weekend"

repositories {
    maven { url "https://binrepo.mapes.info/repository/maven-central/" }
    maven { url "https://binrepo.mapes.info/repository/gradle/" }
}

micronaut {
    runtime("netty")
    processing {
        incremental(true)
        annotations("info.mapes.weekend.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-jackson-databind")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("com.discord4j:discord4j-core:$discord4jVersion")
    implementation("org.litote.kmongo:kmongo-coroutine:$kmongoVersion")
    implementation("io.mongock:mongock-standalone:$mongockVersion")
    implementation("io.mongock:mongodb-reactive-driver:$mongockVersion")
    runtimeOnly("org.yaml:snakeyaml")
}

allOpen {
    annotations("jakarta.inject.Singleton", "io.micronaut.aop.Around")
}

application {
    mainClass.set("info.mapes.weekend.ApplicationKt")
}

kotlin {
    jvmToolchain(17)
}
